apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "weather-mcp.fullname" . }}
  labels:
    {{- include "weather-mcp.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "weather-mcp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "weather-mcp.labels" . | nindent 8 }}
    spec:
      containers:
        - name: weather-mcp
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: weather-mcp
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $secretName := .Values.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "weather-mcp.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 20
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: weather-mcp-storage
              mountPath: /var/lib/weather-mcp/data
            - name: logging-config
              mountPath: /app/config/logging/logging.yaml
              subPath: logging.yaml
            - name: logging-config
              mountPath: /app/config/logging/logging.{{ .Values.env.ENV }}.yaml
              subPath: logging.{{ .Values.env.ENV }}.yaml
      volumes:
        - name: weather-mcp-storage
          persistentVolumeClaim:
            claimName: {{ include "weather-mcp.fullname" . }}-pvc
        - name: logging-config
          configMap:
            name: weather-mcp-config
            items:
              - key: logging.yaml
                path: logging.yaml
              - key: logging.{{ .Values.env.ENV }}.yaml
                path: logging.{{ .Values.env.ENV }}.yaml
